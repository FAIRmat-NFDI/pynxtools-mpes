{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Documentation for pynxtools-mpes","text":"<p>pynxtools-mpes is a free, and open-source data software for harmonizing multidimensional photoemission spectroscopy (MPES) data and metadata for research data management using NeXus.</p> <p>pynxtools-mpes is a plugin for pynxtools for reading, translating, and standardizing MPES data from different sources such that it is compliant with the NeXus application definition <code>NXmpes</code>. In addition, it also supports the specialized application definition <code>NXmpes_arpes</code> for angle-resolved photoemission spectroscopy (ARPES) experiments.</p> <p>pynxtools-mpes is developed both as a standalone reader and as a tool within NOMAD, which is the open-source data management platform for materials science we are developing within FAIRmat.</p> Project and community <ul> <li>NOMAD code guidelines </li> </ul> <p>Any questions or suggestions? Get in touch!</p> <p>The work is funded by the Deutsche Forschungsgemeinschaft (DFG, German Research Foundation) - 460197019 (FAIRmat).</p>"},{"location":"index.html#tutorial","title":"Tutorial","text":"<p>A series of tutorials giving you an overview on how to store or convert your XPS data to NeXus compliant files.</p> <ul> <li>Installation guide</li> <li>Standalone usage and examples</li> </ul>"},{"location":"index.html#how-to-guides","title":"How-to guides","text":"<p>How-to guides provide step-by-step instructions for a wide range of tasks, with the overarching topics:</p> <ul> <li>How to build a new MPES reader</li> </ul>"},{"location":"index.html#learn","title":"Learn","text":"<ul> <li>coming soon!</li> </ul>"},{"location":"index.html#reference","title":"Reference","text":"<p>Here you can learn which specific readers are currently implemented in <code>pynxtools-mpes</code>.</p> <ul> <li>MPES reader for data from the FHI Berlin </li> </ul>"},{"location":"how-tos/build-a-reader.html","title":"How to build a new MPES reader","text":"<p>Work in progress</p>"},{"location":"reference/mpes.html","title":"Data from MPES instruments","text":"<p>The reader supports HDF5 files created using the MPES instruments at the Department of Physical Chemistry of the Fritz Haber Institute of the Max Planck Society (FHI).</p> <p>The reader for can be found here.</p> <p>Example data for the MPES reader is available here.</p> <p>The example conversion can be run with the following command. <pre><code>user@box:~$ \ndataconverter xarray_saved_small_calibration.h5 eln_data.yaml -c config_file.json --reader mpes --nxdl NXmpes_arpes --output example_eln.nxs\n</code></pre></p> <p>The reader is a tailored parser for research data in a common format. This particular example is able to read and map HDF5 files, as well as JSON and YAML files. Feel free to contact FAIRmat if you want to create a parser for your research data.</p>"},{"location":"tutorial/installation.html","title":"Installation","text":"<p>It is recommended to use python 3.11 with a dedicated virtual environment for this package. Learn how to manage python versions and virtual environments.</p> <p>This package is a reader plugin for <code>pynxtools</code> and thus should be installed together with <code>pynxtools</code>:</p> <pre><code>pip install pynxtools[mpes]\n</code></pre> <p>for the latest development version.</p>"},{"location":"tutorial/standalone.html","title":"Convert MPES data and metadata to NeXus","text":""},{"location":"tutorial/standalone.html#who-is-this-tutorial-for","title":"Who is this tutorial for?","text":"<p>This document is for people who want to use this reader as a standalone application for converting their research data into a standardized NeXus format.</p>"},{"location":"tutorial/standalone.html#what-should-you-should-know-before-this-tutorial","title":"What should you should know before this tutorial?","text":"<ul> <li>You should have a basic understanding of FAIRmat NeXus and pynxtools</li> <li>You should have a basic understanding of using Python and Jupyter notebooks via JupyterLab</li> </ul>"},{"location":"tutorial/standalone.html#what-you-will-know-at-the-end-of-this-tutorial","title":"What you will know at the end of this tutorial?","text":"<p>You will have a basic understanding how to use pynxtools-mpes for converting your MPES data to a NeXus/HDF5 file.</p>"},{"location":"tutorial/standalone.html#steps","title":"Steps","text":""},{"location":"tutorial/standalone.html#installation","title":"Installation","text":"<p>See here for how to install pynxtools together with the MPES reader plugin.</p>"},{"location":"tutorial/standalone.html#running-the-reader-from-the-command-line","title":"Running the reader from the command line","text":"<p>An example script to run the MPES reader in <code>pynxtools</code>: <pre><code> ! dataconverter \\\n--reader mpes \\\n--nxdl NXmpes_arpes \\\n$&lt;mpes-file path&gt; \\\n$&lt;eln-file path&gt; \\\n-c $&lt;config-file path&gt; \\\n--output &lt;output-file path&gt;.nxs\n</code></pre></p>"},{"location":"tutorial/standalone.html#examples","title":"Examples","text":"<p>You can find exhaustive examples how to use <code>pynxtools-mpes</code> for your ARPES research data pipeline in <code>src/pynxtools-mpes/nomad/examples</code>. These are designed for working with <code>NOMAD</code> and its <code>NOMAD Remote Tools Hub (NORTH)</code>.</p> <p>There are also small example files for using the <code>pynxtools</code> dataconverter with the <code>mpes</code> reader and the <code>NXmpes</code> application definition in <code>tests/data</code>.</p> <p>For this tutorial, we will work with this data. You can run the conversion as <pre><code>dataconverter \\\\\n    --reader mpes \\\\\n    --nxdl NXmpes_arpes \\\\\n    xarray_saved_small_calibration \\\\\n    eln_data.yaml \\\\\n    -c  config_file.json \\\\\n    --output mpes_example.nxs\n</code></pre></p> <p>Congrats! You now have a FAIR NeXus file!</p>"}]}